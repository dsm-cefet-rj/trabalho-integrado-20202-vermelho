{"version":3,"sources":["Menu.jsx","components/Registrar.jsx","utils.js","baseUrl.js","store/reducers/cardapioSlice.js","components/Cardapio.jsx","components/CriaCardapio.jsx","store/reducers/refeicaoSlice.js","components/CriaRefeicao.jsx","components/Pedido.jsx","store/reducers/pedidosrecebidosSlice.js","components/PedidosRecebidos.jsx","store/reducers/realizapedidoSlice.js","components/RealizaPedido.jsx","routes.jsx","store/store.js","App.js","reportWebVitals.js","index.js"],"names":["SimpleMenu","React","useState","anchorEl","setAnchorEl","handleClose","className","Button","aria-controls","aria-haspopup","onClick","event","currentTarget","id","src","Menu","keepMounted","open","Boolean","onClose","MenuItem","href","yup","ptForm","schema","shape","firstName","required","lastName","email","age","positive","integer","password","min","max","confirmPassword","oneOf","Form","useForm","resolver","yupResolver","register","handleSubmit","errors","onSubmit","data","console","log","htmlFor","type","name","ref","message","client","endpoint","a","body","customConfig","headers","config","method","JSON","stringify","window","fetch","response","json","ok","Error","statusText","Promise","reject","httpGet","httpPost","httpPut","httpDelete","pedidosUrl","cardapioUrl","cardapioAdapter","createEntityAdapter","cardapio","getInitialState","status","error","fetchCardapios","createAsyncThunk","deleteCardapioServer","idCardapio","addCardapioServer","updateCardapioServer","cardapioSlice","createSlice","initialState","extraReducers","pending","state","action","rejected","fulfilled","setAll","payload","removeOne","addOne","upsertOne","getSelectors","selectAllCardapios","selectAll","selectById","selectIds","props","history","useHistory","cardapios","useSelector","dispatch","useDispatch","useEffect","tipo","setTipo","cardapioAtu","map","nome","img","alt","descricao","refeicoes","refeicao","preco","onChange","e","target","value","selected","renderiza","Condicao","push","CriaCardapio","setNome","setRefeicao","setDescricao","setPreco","for","placeholder","rows","refeicaoSlice","reducers","alteraNome","alteraTipo","actions","CriaRefeicao","pedidos","numero","quarto","total","lidaPronto","alert","pedidosrecebidosAdapter","pedidosrecebidos","fetchPedidos","deletePedidoServer","idPedido","addPedidoServer","pedido","updatePedidoServer","pedidosrecebidosSlice","selectAllPedidos","PedidosRecebidos","setTimeout","Renderiza","pronto","undefined","realizapedidoSlice","alteraQuarto","RealizaPedido","realizapedido","exact","path","store","configureStore","reducer","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9be61bef.chunk.js","sourcesContent":["import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nimport './Menu.css';\r\n\r\nexport default function SimpleMenu() {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"Menu\">\r\n      \r\n      <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}>\r\n        <div className='menu-texto'>Menu</div>\r\n      </Button>\r\n        <div id= \"titulo\">Hotelaria 5 Estrelas!</div>\r\n      <div id=\"imagem\">\r\n        <img src=\"/images/hotelaria-slogan.jpg\" className=\"img-menu\"></img>\r\n      </div>\r\n      \r\n      <Menu\r\n        id=\"simple-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleClose}\r\n      >\r\n        <MenuItem onClick={handleClose}><a href='/registrar'>Registrar</a></MenuItem>\r\n        <MenuItem onClick={handleClose}><a href='/cardapio'>Cardápio</a></MenuItem>\r\n        <MenuItem onClick={handleClose}><a href='/cria-cardapio'>Criar Cardápio</a></MenuItem>\r\n        <MenuItem onClick={handleClose}><a href='/realiza-pedido'>Fazer Pedido</a></MenuItem>\r\n        <MenuItem onClick={handleClose}><a href='/cria-refeicao'>Criar Refeição</a></MenuItem>\r\n        <MenuItem onClick={handleClose}> <a href='/pedidos-recebidos'> Pedidos </a></MenuItem>\r\n      </Menu>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport '../styles/Registrar.css'\r\n\r\nimport { useForm } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as yup from 'yup';\r\nimport { ptForm } from 'yup-locale-pt';\r\n\r\nyup.setLocale(ptForm);\r\n\r\nexport let schema = yup.object().shape({\r\n  firstName: yup.string().required(),\r\n  lastName: yup.string().required(),\r\n  email: yup.string().email(\"Insira um email válido\").required(),\r\n  age: yup.number(\"Idade precisa ser um número\").positive(\"Idade precisa ser número positivo\").integer().required(),\r\n  password: yup.string().min(4).max(15).required(),\r\n  confirmPassword: yup.string().oneOf([yup.ref(\"password\"), null]),\r\n});\r\n\r\nfunction Form () {\r\n\r\n  const { register, handleSubmit, errors } = useForm({\r\n    resolver: yupResolver(schema),\r\n  });\r\n\r\n  const submitForm = (data) => {\r\n    console.log(data);\r\n  };\r\n\r\n  return (\r\n    <div className=\"Form\">\r\n      <div className=\"title\">Registrar</div>\r\n      <div className=\"inputs\">\r\n        <form onSubmit={handleSubmit(submitForm)} id='form-registrar'>\r\n          <label htmlFor=\"\">Nome:</label><br/>\r\n          <input type=\"text\" name=\"firstName\"ref={register}/>\r\n          <p> {errors.firstName?.message} </p>\r\n          <label htmlFor=\"\">Sobrenome:</label><br/>\r\n          <input type=\"text\" name=\"lastName\"  ref={register}/>\r\n          <p> {errors.lastName?.message} </p>\r\n          <label htmlFor=\"\">Email:</label><br/>\r\n          <input type=\"text\" name=\"email\"  ref={register}/>\r\n          <p> {errors.email?.message} </p>\r\n          <label htmlFor=\"\">Idade:</label><br/>\r\n          <input type=\"text\" name=\"age\"  ref={register}/>\r\n          <p> {errors.age?.message} </p>\r\n          <label htmlFor=\"\">Senha:</label><br/>\r\n          <input type=\"password\" ref={register}/>\r\n          <p> {errors.password?.message} </p>\r\n          <label htmlFor=\"\">Confirme a Senha:</label><br/>\r\n          <input type=\"password\" name=\"confirmPassword\" ref={register}/>\r\n          <p> {errors.confirmPassword && \"As senhas precisam ser iguais\"} </p>\r\n          <input type=\"submit\" id=\"submit\" />\r\n\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Form;","async function client(endpoint, { body, ...customConfig } = {}) {\r\n    const headers = { 'Content-Type': 'application/json' }\r\n  \r\n    const config = {\r\n      method: body ? 'POST' : 'GET',\r\n      ...customConfig,\r\n      headers: {\r\n        ...headers,\r\n        ...customConfig.headers,\r\n      },\r\n    }\r\n  \r\n    if (body) {\r\n      config.body = JSON.stringify(body)\r\n    }\r\n  \r\n    let data\r\n    try {\r\n      const response = await window.fetch(endpoint, config)\r\n      data = await response.json()\r\n      if (response.ok) {\r\n        return data\r\n      }\r\n      throw new Error(response.statusText)\r\n    } catch (err) {\r\n      return Promise.reject(err.message ? err.message : data)\r\n    }\r\n  }\r\n  \r\n  export const httpGet = async function (endpoint, customConfig = {}) {\r\n    return client(endpoint, { ...customConfig, method: 'GET' })\r\n  }\r\n  \r\n  export const httpPost = async function (endpoint, body, customConfig = {}) {\r\n    return client(endpoint, {body, ...customConfig, method: 'POST'})\r\n  }\r\n\r\n  export const httpPut = async function (endpoint, body, customConfig = {}) {\r\n    return client(endpoint, {body, ...customConfig, method: 'PUT'})\r\n  }\r\n\r\n  export const httpDelete = async function (endpoint, customConfig = {}) {\r\n    return client(endpoint, { ...customConfig, method: 'DELETE' })\r\n  }","export const pedidosUrl = 'http://localhost:3004';\r\nexport const cardapioUrl = 'http://localhost:3005';","import { createSlice, createAsyncThunk, createEntityAdapter } from '@reduxjs/toolkit'\r\nimport { httpDelete, httpGet, httpPut, httpPost } from '../../utils.js'\r\n\r\nimport { cardapioUrl } from '../../baseUrl'\r\n\r\nconst cardapioAdapter = createEntityAdapter();\r\n\r\nconst cardapio = cardapioAdapter.getInitialState({\r\n    status: \"not_loaded\",\r\n    error: null\r\n})\r\n\r\nexport const fetchCardapios = createAsyncThunk('cardapios/fetchcardapios',\r\n    async () => {\r\n        return await httpGet(`${cardapioUrl}/cardapiosEx`);\r\n    }\r\n)\r\n\r\nexport const deleteCardapioServer = createAsyncThunk('cardapiosrecebidos/deletecardapioServer', async (idCardapio) => {\r\n    await httpDelete(`${cardapioUrl}/cardapiosEx/${idCardapio}`);\r\n    return idCardapio;\r\n});\r\n\r\nexport const addCardapioServer = createAsyncThunk('cardapiosrecebidos/addCardapioServer', async (cardapio) => {\r\n    return await httpPost(`${cardapioUrl}/cardapiosEx`, cardapio);\r\n});\r\n\r\nexport const updateCardapioServer = createAsyncThunk('cardapiosrecebidos/updateCardapioServer', async (cardapio) => {\r\n    return await httpPut(`${cardapioUrl}/cardapiosEx/${cardapio.id}`, cardapio);\r\n});\r\n\r\n\r\nexport const cardapioSlice = createSlice({ // retorna um objeto que contem os action creators e reducers\r\n    name: 'cardapio',\r\n    initialState: cardapio,\r\n    extraReducers: {\r\n        [fetchCardapios.pending]: (state, action) => {state.status = 'loading'},\r\n        [fetchCardapios.rejected]: (state, action) =>  {state.status = 'failed'; state.error = action.error.message},\r\n        [fetchCardapios.fulfilled]: (state, action) => {state.status = 'loaded'; cardapioAdapter.setAll(state, action.payload)},\r\n        [deleteCardapioServer.fulfilled]: (state, action) => {state.status = 'deleted'; cardapioAdapter.removeOne(state, action.payload)},\r\n        [addCardapioServer.fulfilled]: (state,action) => {state.status = 'saved'; cardapioAdapter.addOne(state, action.payload)},\r\n        [updateCardapioServer.fulfilled]: (state, action) => {state.status = 'saved'; cardapioAdapter.upsertOne(state, action.payload)},\r\n    }\r\n})\r\n\r\nexport default cardapioSlice.reducer\r\n\r\n\r\nexport const {\r\n    selectAll: selectAllCardapios,\r\n    selectById: selectCardapioById,\r\n    selectIds: selectCardapiosIds,\r\n} = cardapioAdapter.getSelectors(state => state.cardapio)","import  { React, useState, useEffect } from 'react'\r\nimport { useHistory } from 'react-router-dom'; // Hook que irei usar para passar o path\r\n\r\nimport { selectAllCardapios, fetchCardapios } from '../store/reducers/cardapioSlice'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\nimport '../styles/Cardapio.css'\r\n\r\nexport default props => {\r\n    const history = useHistory(); // Para cria a rota no botão\r\n\r\n    const cardapios = useSelector(selectAllCardapios)\r\n    const state = useSelector(state => state.cardapio.status)\r\n    const error = useSelector(state => state.cardapio.error)\r\n\r\n    const dispatch = useDispatch()\r\n    \r\n    useEffect(() => {\r\n        if (state === \"not_loaded\" || state === \"saved\" || state === \"deleted\") {\r\n            dispatch(fetchCardapios())\r\n        }\r\n    }, [state, dispatch])\r\n\r\n    const [tipo, setTipo] = useState(0)\r\n\r\n    const Condicao = () => {\r\n        let renderiza = ''\r\n\r\n        if (state === \"loaded\") {\r\n            return cardapioAtu\r\n        } else if (state === \"loading\") {\r\n            renderiza = <div className = 'renderiza-aviso' id = 'loading'>\r\n                            <img id=\"loading-img\" src=\"/images/cardapio2.png\"/>\r\n                            <div className= 'loading-div'>\r\n                            Carregando...    \r\n                            </div> \r\n                        </div>\r\n        } else if (state === \"failed\") {\r\n            renderiza = <div className = 'renderiza-aviso' id = 'error'><div className='error-div'> Error: {error}</div> </div>\r\n        }\r\n        return renderiza\r\n    }\r\n    \r\n    let cardapioAtu = cardapios.map(cardapio => {\r\n        if ( cardapio.tipo == tipo ){\r\n                return <div className=\"cardapio-div\">\r\n                        <div className=\"cardapio-div2\">\r\n                            <p className=\"cardapio-elemento\">{cardapio.nome}</p>\r\n                            <input className=\"checkbox\" type=\"checkbox\"/>\r\n                        </div>\r\n                        {cardapio.img != \"cardapio.png\"\r\n                        ?\r\n                        <img id=\"cardapio-img\" src={`/images/${cardapio.img}`} alt=\"\"/>\r\n                        :\r\n                        <img id=\"cardapio-img-improvisado\" src=\"/images/cardapio.png\" alt=\"\"/>}\r\n\r\n                        <p className= \"cardapio-descricao\">{cardapio.descricao}</p>\r\n                        <div>   \r\n                            <ul>\r\n                                {cardapio.refeicoes.map(refeicao => (\r\n                                    <li>{refeicao}</li>\r\n                                ))}\r\n                            </ul>\r\n                        </div>\r\n                        <p className=\"cardapio-elemento\" id=\"preco\">{cardapio.preco}</p>\r\n                      </div>\r\n            }\r\n        })\r\n\r\n    return (\r\n            <div id=\"cardapio\">\r\n                <div className=\"cardapio-titulo\">\r\n                    <h3>Cardápio </h3>\r\n                </div>\r\n                <br />\r\n                <form action=\"\">\r\n                    <div className=\"seletor\">\r\n                        <select className=\"opcoes\" onChange={e => setTipo(e.target.value)}>\r\n                            <option value= {0} selected>Café da Manhã</option>\r\n                            <option value= {1}>Almoço</option>\r\n                            <option value= {2}>Lanche da Tarde</option>\r\n                            <option value= {3}>Janta</option>\r\n                            <option value= {4}>Sobremesa</option>\r\n                            <option value= {5}>Conveniência</option>\r\n                        </select>\r\n                    </div>\r\n                </form>\r\n                <div className= \"cardapios\">\r\n                    <h2>\r\n                        {Condicao()}\r\n                    </h2>\r\n                </div>\r\n\r\n                <br />\r\n                <div className=\"botoes-cardapio\">\r\n                    <button type=\"button\" onClick={() => history.push('/realiza-pedido')} className=\"btn btn-primary\" id=\"irpedido\"><div className=\"botao\">Ir para Pedido</div></button>\r\n                    <button type=\"button\" className=\"btn btn-danger\" id=\"limpar\"><div className=\"botao\">Limpar</div></button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }","import { React } from 'react'\r\nimport { useHistory } from 'react-router-dom'; // Hook que irei usar para passar o path\r\n\r\nimport { alteraDescricao, alteraNome,\r\n        alteraRefeicao, alteraPreco,\r\n        alteraTipo } from '../store/reducers/cardapioSlice'\r\n\r\nimport '../styles/CriaCardapio.css'\r\n\r\n//bibliotecas para o form validation\r\nimport { useForm } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as yup from 'yup';\r\nimport { ptForm } from 'yup-locale-pt';\r\nimport { useState } from 'react';\r\n\r\nyup.setLocale(ptForm);\r\n\r\nexport let schema = yup.object().shape({\r\n  nome: yup.string().required(),\r\n  tipo: yup.string().required(),\r\n  descricao: yup.string().max(50),\r\n  preco: yup.number(\"Precisa ser um n�mero\").positive(\"Precisa ser n�mero positivo\").required(),\r\n});\r\n\r\nexport default function CriaCardapio(props) {\r\n    const history = useHistory(); // Para criar a rota no bot�o\r\n\r\n    const [nome, setNome] = useState('')\r\n    const [tipo, setTipo] = useState('')\r\n    const [refeicao, setRefeicao] = useState('')\r\n    const [descricao, setDescricao] = useState('Escreva Aqui!')\r\n    const [preco, setPreco] = useState(0)\r\n\r\n    const limpar = () => {\r\n        setNome(\"\")\r\n        setTipo(\"\")\r\n        setRefeicao(\"\")\r\n        setDescricao(\"Escreva Aqui!\")\r\n        setPreco(0)\r\n    }\r\n\r\n    const { register, handleSubmit, errors } = useForm({\r\n      resolver: yupResolver(schema),\r\n    });\r\n\r\n    const submitForm = (data) => {\r\n      console.log(data);\r\n    };\r\n\r\n    return(\r\n    <div id=\"cria-cardapio\">\r\n        <div className=\"cria-cardapio-titulo\">\r\n           <h3>Criar Cardápio</h3>\r\n        </div>\r\n        <br/>     \r\n\r\n        <form className=\"formularios\" onSubmit={handleSubmit(submitForm)}>\r\n            <div className=\"form-group\">\r\n                 <label for=\"formGroupExampleInput\">Nome: </label>\r\n                 <br/>\r\n                 <input type=\"text\" className=\"form-control\" id=\"formGroupExampleInput\" name=\"nome\" placeholder=\"\" ref={register}/>\r\n                  <p> {errors.nome?.message} </p>\r\n             </div>\r\n            <br/>\r\n             <div className=\"form-group\">\r\n                 <label for=\"formGroupExampleInput2\">Tipo: </label>\r\n                 <br/>\r\n                 <input type=\"text\" className=\"form-control\" id=\"formGroupExampleInput2\" name=\"tipo\" placeholder=\"\" ref={register}/>\r\n                 <p> {errors.tipo?.message} </p>\r\n             </div>\r\n            <br/>\r\n             <div className=\"form-group\">\r\n                 <label for=\"formGroupExampleInput2\">Refeicao: </label>\r\n                 <br/>\r\n                 <input type=\"text\" className=\"form-control\" id=\"formGroupExampleInput2\" onChange = {e => setRefeicao(e.target.value)}\r\n                  value={refeicao} placeholder=\"\"/>\r\n             </div>\r\n            <br/>\r\n             <div className=\"form-group\">\r\n                 <label for=\"exampleFormControlTextarea1\">Descricao:</label>\r\n                 <br/>\r\n                 <textarea className=\"form-control-desc\"  id=\"exampleFormControlTextarea1\" rows=\"3\" placeholder=\"\" ref={register}></textarea>\r\n                 <p> {errors.descricao?.message} </p> \r\n             </div>\r\n            <br/>\r\n             <div className=\"form-group col-md-2\">\r\n                 <label for=\"inputZip\">Valor: </label>\r\n                 <br/>\r\n                 <input type=\"number\"  className=\"form-control-2\" id=\"inputZip\" placeholder=\"\" ref={register} \r\n                />\r\n                 <p> {errors.preco?.message} </p>\r\n             </div>\r\n            <br/>\r\n             <div className=\"botoes\">\r\n                <button type=\"button\" className=\"btn\" id=\"criar\" onClick={() => history.push('/cardapio')}>\r\n                     <div className=\"botao\">Criar</div>\r\n                </button>\r\n                <button type=\"button\" className=\"btn\" id=\"limpar\" onClick={() => limpar()}>\r\n                     <div className=\"botao\">Limpar</div>\r\n                </button>\r\n             </div>  \r\n        </form>\r\n    </div>\r\n)\r\n}","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst refeicao = {\r\n    nome : \"\",\r\n    tipo : \"\"\r\n}\r\n\r\nexport const refeicaoSlice = createSlice({\r\n    name: 'refeicao',\r\n    initialState: refeicao,\r\n    reducers: {\r\n        alteraNome: (state, action) => ({...state, nome : action.payload}),\r\n        alteraTipo: (state, action) => ({...state, tipo : action.payload})\r\n    }\r\n})\r\n\r\nexport const { alteraNome, alteraTipo } = refeicaoSlice.actions\r\nexport default refeicaoSlice.reducer ","import React from 'react'\r\nimport { useHistory } from 'react-router-dom'; // Hook que irei usar para passar o path\r\n\r\nimport { alteraNome, alteraTipo } from '../store/reducers/refeicaoSlice'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\nimport '../styles/CriaRefeicao.css'\r\n\r\nexport default function CriaRefeicao(props) {\r\n    const history = useHistory(); // Para cria a rota no botão\r\n\r\n    const refeicao = useSelector(state => state.refeicao)\r\n    const { nome, tipo } = refeicao\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    return(\r\n        <div id=\"cria-refeicao\">\r\n            <div className=\"cria-refeicao-titulo\">\r\n            <h3>Criar Refeição</h3>\r\n            </div>\r\n            <br/>\r\n            <form>\r\n                <div className=\"form-group\">\r\n                    <label for=\"formGroupExampleInput\" className=\"label-title\">Nome: </label>\r\n                    <br/>\r\n                    <input type=\"text\" className=\"form-control\" id=\"formGroupExampleInput\" placeholder=\"\" \r\n                    onChange={(e) => dispatch(alteraNome(e.target.value))} value={nome} />\r\n                </div>\r\n                <br/>\r\n                <div className=\"form-group\">\r\n                    <label for=\"formGroupExampleInput2\" className=\"label-title\">Tipo: </label>\r\n                    <br/>\r\n                    <input type=\"text\" className=\"form-control\" id=\"formGroupExampleInput2\" placeholder=\"\"\r\n                    onChange={(e) => dispatch(alteraTipo(e.target.value))} value={tipo} />\r\n                </div>\r\n                <br/>\r\n                <div className=\"botoes\">\r\n                    <button type=\"button\" onClick={() => history.push('/cardapio')} className=\"btn btn-primary\" id = \"cria\">\r\n                        <div className=\"botao\">Cria</div></button>\r\n                    <button type=\"button\" onClick={() => history.push('/cardapio')} className=\"btn btn-danger\" id=\"cancela\">\r\n                        <div className=\"botao\">Cancela</div></button>\r\n                </div>\r\n            </form>\r\n    </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nimport '../styles/Pedido.css'\r\n\r\nexport default props => {\r\n    const a = props.pedidos\r\n\r\n    // Um map em pedidos que é recebido pelas props (sendo o conteudo, alimentos) para serem listados\r\n    let pedidos = a.map(pedidos =>\r\n        <li>{pedidos}</li>)\r\n\r\n        return (\r\n            <div className=\"pedido\">\r\n                <div className=\"cabecalho\">\r\n                    <div>#{props.numero}</div>\r\n                    <h1>Quarto: {props.quarto}</h1>\r\n                </div>\r\n\r\n                <div className=\"detalhes\">\r\n                    <ul className=\"detalhes-ul\">\r\n                        {pedidos}\r\n                    </ul>\r\n                </div>\r\n\r\n                <div className=\"total\">\r\n                    Total:\r\n                R$ {props.total}\r\n                </div>\r\n\r\n                <br />\r\n\r\n                <div className=\"botoes\">\r\n                    <button type=\"button\" \r\n                            className=\"btn btn-success\" \r\n                            onClick={props.lidaPronto} \r\n                            id=\"pronto\">\r\n                        <div className=\"botao\">Pronto!</div>\r\n                    </button>\r\n                    <button type=\"button\" \r\n                            className=\"btn btn-secondary\" \r\n                            id=\"preparando\"\r\n                            onClick = {() => {alert('Cliente avisado')}}>\r\n                        <div className=\"botao\">Preparando...</div>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        )\r\n}","import { createAsyncThunk, createEntityAdapter, createSlice } from '@reduxjs/toolkit'\r\nimport { httpDelete, httpGet, httpPut, httpPost } from '../../utils.js'\r\n\r\nimport { pedidosUrl } from '../../baseUrl'\r\n\r\nconst pedidosrecebidosAdapter = createEntityAdapter();\r\n\r\n\r\nconst pedidosrecebidos = pedidosrecebidosAdapter.getInitialState({\r\n    status: \"not_loaded\",\r\n    error: null\r\n})\r\n\r\n// Buscando no json-server\r\nexport const fetchPedidos = createAsyncThunk('pedidosrecebidos/fetchPedidos',\r\n    async () => {\r\n        return await httpGet(`${pedidosUrl}/pedidosEx`);\r\n    }\r\n);\r\n\r\nexport const deletePedidoServer = createAsyncThunk('pedidosrecebidos/deletePedidoServer', async (idPedido) => {\r\n    await httpDelete(`${pedidosUrl}/pedidosEx/${idPedido}`);\r\n    return idPedido;\r\n});\r\n\r\nexport const addPedidoServer = createAsyncThunk('pedidosrecebidos/addPedidoServer', async (pedido) => {\r\n    return await httpPost(`${pedidosUrl}/pedidosEx`, pedido);\r\n});\r\n\r\nexport const updatePedidoServer = createAsyncThunk('pedidosrecebidos/updatePedidoServer', async (pedido) => {\r\n    return await httpPut(`${pedidosUrl}/pedidosEx/${pedido.id}`, pedido);\r\n});\r\n\r\n\r\nexport const pedidosrecebidosSlice = createSlice({ // retorna um objeto que contem os action creators e reducers\r\n    name: 'pedidosrecebidos',\r\n    initialState: pedidosrecebidos,\r\n    extraReducers: {\r\n        [fetchPedidos.pending]: (state, action) => {state.status = 'loading'},\r\n        [fetchPedidos.fulfilled]: (state, action) => {state.status = 'loaded';pedidosrecebidosAdapter.setAll(state, action.payload)}, // Onde colocamos o reducer do fetch\r\n        [fetchPedidos.rejected]: (state, action) =>  {state.status = 'failed'; state.error = action.error.message},\r\n        [deletePedidoServer.fulfilled]: (state, action) => {state.status = 'deleted'; pedidosrecebidosAdapter.removeOne(state, action.payload)},\r\n        [addPedidoServer.fulfilled]: (state,action) => {state.status = 'saved'; pedidosrecebidosAdapter.addOne(state, action.payload)},\r\n        [updatePedidoServer.fulfilled]: (state, action) => {state.status = 'saved'; pedidosrecebidosAdapter.upsertOne(state, action.payload)},\r\n    },\r\n    })\r\n\r\n//export const { alteraPedido } = pedidosrecebidosSlice.actions\r\nexport default pedidosrecebidosSlice.reducer\r\n\r\nexport const {\r\n    selectAll: selectAllPedidos,\r\n    selectById: selectPedidosById,\r\n    selectIds: selectPedidosIds,\r\n} = pedidosrecebidosAdapter.getSelectors(state => state.pedidosrecebidos)","import React, { useEffect }  from 'react'\r\n\r\nimport Pedido from './Pedido.jsx'\r\n\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { updatePedidoServer, deletePedidoServer, addPedidoServer, fetchPedidos, selectAllPedidos } from '../store/reducers/pedidosrecebidosSlice'\r\n\r\nimport '../styles/PedidosRecebidos.css'\r\n\r\nexport default function PedidosRecebidos(props) {\r\n    const pedidos = useSelector(selectAllPedidos)\r\n    const state = useSelector(state => state.pedidosrecebidos.status)\r\n    const error = useSelector(state => state.pedidosrecebidos.error)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => { // Faz o fetch quando pedidosrecebidos é renderizado\r\n        if (state === \"not_loaded\" || state === \"saved\" || state === \"deleted\") {\r\n            dispatch(fetchPedidos())\r\n        } else if (state === 'failed') {\r\n            setTimeout(() => dispatch(fetchPedidos()), 5000)\r\n        }\r\n    }, [state, dispatch])\r\n\r\n\r\n    const Renderiza = pedido => {\r\n        const lidaPronto = () => { // Destructuring do objeto pronto para atualizar com pronto alterado.\r\n            const { id, numero, quarto, pedidos, total, pronto } = pedido\r\n            dispatch(updatePedidoServer(\r\n                {\r\n                    id: id,\r\n                    numero: numero,\r\n                    quarto: quarto,\r\n                    pedidos: pedidos,\r\n                    total: total,\r\n                    pronto: !pronto\r\n                }\r\n            )) \r\n        }\r\n\r\n        if (!pedido.pronto) {\r\n            return (\r\n                <Pedido numero={pedido.numero} quarto={pedido.quarto} pedidos={pedido.pedidos}\r\n                    total={pedido.total} pronto={pedido.pronto} lidaPronto={lidaPronto}></Pedido>\r\n            )\r\n        }\r\n    }\r\n\r\n    const Condicao = pedidos => {\r\n        let renderiza = '';\r\n        \r\n        if (state === \"loaded\") {\r\n            renderiza = <div>{pedidos.map(Renderiza)}</div>\r\n        }else if (state === \"loading\") {\r\n            renderiza = <div className = 'renderiza-aviso' id = 'loading'><br/><img id=\"loading-img\" src=\"/images/cardapio2.png\"/><div className= 'loading-div'> Carregando...</div> </div>\r\n        }else if (state === \"failed\") {\r\n            renderiza = <div className = 'renderiza-aviso' id = 'error'><div className='error-div'> Error: {error}</div> </div>\r\n        }\r\n       return renderiza\r\n    }\r\n\r\n    return (\r\n        <div id=\"pedidos-recebidos\">\r\n            <div className=\"pedidos-recebidos-titulo\">\r\n                <h3>Pedidos Recebidos\r\n                    <img className='refresh' src=\"/images/refresh.png\" onClick = {() => dispatch(fetchPedidos())}/>\r\n                </h3>\r\n            </div>\r\n            {state === undefined ? // Caso não pegue nada do backend\r\n            <div>\r\n              Sem novos pedidos!\r\n            </div>\r\n            :  \r\n             <div>\r\n                {Condicao(pedidos)}\r\n            </div>}\r\n          \r\n            <br />\r\n        </div>\r\n\r\n    )\r\n}","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst realizapedido = {\r\n    quarto: 0\r\n}\r\n\r\nexport const realizapedidoSlice = createSlice({\r\n    name: 'realizapedido',\r\n    initialState: realizapedido,\r\n    reducers: {\r\n        alteraQuarto: (state, action) => ({...state, quarto : action.payload})\r\n    }\r\n})\r\n\r\nexport const { alteraQuarto } = realizapedidoSlice.actions\r\nexport default realizapedidoSlice.reducer "," import React from 'react'\r\n import { useHistory } from 'react-router-dom'; // Hook que irei usar para passar o path\r\n\r\n import { useDispatch, useSelector } from 'react-redux'\r\n import { alteraQuarto } from '../store/reducers/realizapedidoSlice'\r\n\r\n import '../styles/RealizaPedido.css'\r\n\r\n export default function RealizaPedido (props) {\r\n    const history = useHistory(); // Para criar a rota no botão\r\n\r\n    const realizapedido = useSelector(state => state.realizapedido)\r\n    const { quarto } = realizapedido\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    return (        \r\n    <div id= \"realiza-pedido\">\r\n        \r\n        <div className=\"realiza-pedido-titulo\">\r\n        <h3>Pedido </h3>\r\n    </div>\r\n\r\n\r\n    <div>\r\n        <ul>\r\n            <li className=\"item\">Fritas C/ Coca</li>\r\n            <li className=\"preco\">R$ 15,00</li>\r\n\r\n            <li className=\"item\">Combo Hamburguer</li>\r\n            <li className=\"preco\">R$ 25,00</li>\r\n\r\n            <li className=\"item\">Sobremesa Flocos</li>\r\n            <li className=\"preco\">R$ 10,00</li>\r\n        </ul>\r\n    </div>\r\n\r\n    <form>\r\n        <div className=\"form-group col-md-2\">\r\n            <label className=\"quarto\" for=\"inputZip\">Quarto: </label>\r\n            <input type=\"number\" className=\"form-control\" id=\"inputZip\" \r\n            onChange={(e) => dispatch(alteraQuarto(+e.target.value))}  value={quarto} />\r\n        </div>\r\n    </form>\r\n        <br/>\r\n    <div className=\"total\">\r\n        Total:\r\n        R$ 50,00\r\n    </div>\r\n    <br/>\r\n\r\n    <div className=\"botoes\">\r\n        <button type=\"button\" className=\"btn btn-primary\" id= \"pedir\"\r\n        onClick={() => history.push('/cardapio')}><div className=\"botao\">Pedir</div></button>\r\n\r\n        <button type=\"button\" className=\"btn btn-danger\" id = \"cancela\"\r\n        onClick={() => history.push('/cardapio')}> <div className=\"botao\">Cancela</div></button>\r\n    </div>\r\n\r\n    </div>\r\n\r\n    )\r\n}","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Switch} from 'react-router-dom';\r\n\r\nimport Registrar from './components/Registrar'\r\nimport Cardapio from './components/Cardapio';\r\nimport CriaCardapio from './components/CriaCardapio'\r\nimport CriaRefeicao from './components/CriaRefeicao'\r\nimport PedidosRecebidos from './components/PedidosRecebidos'\r\nimport RealizaPedido from './components/RealizaPedido'\r\n\r\nexport default props => {\r\n\r\n    return(\r\n        <Router>\r\n            <Switch>\r\n                <Route exact path='/'>\r\n                    <RealizaPedido/>\r\n                </Route>\r\n\r\n                <Route exact path='/registrar'>\r\n                    <Registrar/>\r\n                </Route>\r\n\r\n                <Route exact path='/realiza-pedido'>\r\n                    <RealizaPedido/>\r\n                </Route>\r\n        \r\n                <Route exact path = '/cardapio'>\r\n                    <Cardapio/>\r\n                </Route>\r\n\r\n                <Route exact path = '/pedidos-recebidos'>\r\n                    <PedidosRecebidos/>\r\n                </Route>\r\n\r\n                <Route exact path = '/cria-cardapio'>\r\n                    <CriaCardapio/>\r\n                </Route>\r\n\r\n                <Route exact path = '/cria-refeicao'>\r\n                    <CriaRefeicao/>\r\n                </Route>\r\n            </Switch>\r\n        </Router>\r\n    )\r\n}\r\n","import { configureStore } from '@reduxjs/toolkit'\r\n\r\nimport cardapio from './reducers/cardapioSlice'\r\nimport refeicao from './reducers/refeicaoSlice'\r\nimport realizapedido from './reducers/realizapedidoSlice'\r\nimport pedidosrecebidos from './reducers/pedidosrecebidosSlice'\r\n\r\n\r\n// store\r\nexport const store = configureStore({\r\n    reducer : {\r\n        cardapio,\r\n        refeicao,\r\n        realizapedido,\r\n        pedidosrecebidos,\r\n    }\r\n})","import React from 'react'\r\n//import './App.css'\r\n\r\nimport Menu from './Menu'\r\n//import CriarRefeicao from './components/cria-refeicao'\r\n\r\nimport Routes from './routes.jsx'\r\n\r\n// Integração com o Redux\r\nimport { Provider } from 'react-redux' // Componente que irá integrar react-redux envolvendo a aplicação\r\nimport { store } from './store/store'\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Provider store = {store}> \r\n        <Menu></Menu>\r\n        <Routes/>\r\n      </Provider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}